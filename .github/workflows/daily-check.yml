name: Daily Diaper Deal Check

on:
  schedule:
    - cron: '0 22 * * *'  # Run daily at 10 PM UTC (8 AM AEST)
  workflow_dispatch:  # Allow manual runs

permissions:
  contents: write

jobs:
  check-deals:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install system dependencies for crawl4ai
      run: |
        sudo apt-get update
        sudo apt-get install -y chromium-browser
        
    - name: Install Python dependencies
      run: |
        pip install --upgrade pip
        pip install crawl4ai
        
    - name: Initialize crawl4ai
      run: |
        python -c "
        import asyncio
        from crawl4ai import AsyncWebCrawler
        print('Testing crawl4ai installation...')
        
        async def test_crawl4ai():
            try:
                async with AsyncWebCrawler() as crawler:
                    print('‚úÖ crawl4ai initialized successfully!')
                    return True
            except Exception as e:
                print(f'‚ùå crawl4ai test failed: {e}')
                return False
        
        result = asyncio.run(test_crawl4ai())
        if result:
            print('üöÄ crawl4ai ready for use!')
        else:
            print('‚ö†Ô∏è crawl4ai may have issues but will attempt to continue')
        "
    
    - name: Run deal checker
      env:
        EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
        GMAIL_EMAIL: ${{ secrets.GMAIL_EMAIL }}
        RECIPIENT_EMAIL: ${{ secrets.RECIPIENT_EMAIL }}
      run: python deal_finder.py
    
    - name: Check if files changed
      id: verify-changed-files
      run: |
        if git diff --quiet docs/latest_deals.json; then
          echo "No changes detected"
          echo "changed=false" >> $GITHUB_OUTPUT
        else
          echo "Changes detected"
          echo "changed=true" >> $GITHUB_OUTPUT
        fi
    
    - name: Commit and push changes
      if: steps.verify-changed-files.outputs.changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action Bot"
        git add docs/latest_deals.json
        git commit -m "üï∑Ô∏è Update deals - $(date +'%Y-%m-%d %H:%M')"
        git push
